{"version":3,"sources":["redux/user/userAuth-actions.js","redux/user/userAuth-reducer.js","redux/user/userAuth-operations.js","redux/user/userAuth-selectors.js","components/Navigation/Navigation.js","components/userAuth/userAuth.js","components/userMenu/userMenu.js","components/AppBAr/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","components/errorMessage.js","App.js","redux/store.js","index.js","routes.js","components/Navigation/Navigation.module.css","components/userAuth/userAuth.module.css","components/userMenu/userMenu.module.css","redux/contacts/contact-reducer.js","redux/contacts/contact-actions.js","components/Container/Container.js","components/Loader/Loader.js","components/AppBAr/AppBar.module.css","components/Container/Container.module.css","components/Loader/Loader.module.css","redux/contacts/contact-operations.js","redux/contacts/contact-selector.js"],"names":["registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","addValue","name","value","type","payload","resetValue","resetError","initialUserState","email","user","createReducer","userAuthActions","_","token","setError","error","fetchContactsError","addContactsError","deleteContactsError","isLogin","password","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","authActions","post","response","data","message","logOut","logIn","getCurrentUser","getState","persistedToken","userAuth","get","getIsAuthenticated","state","getUsername","getName","getEmail","getPassword","getError","Navigation","className","styles","home_link","exact","to","routes","home","link","activeClassName","activeLink","Icon","style","color","grey","fontSize","prompt","contacts","this","props","isAuthenticated","Component","connect","userAuthSelectors","UserAuth","login","UserMenu","user_menu","username","btn_logout","onClick","onLogout","mapDispatchToProps","userAuthOperations","header","component","redirectTo","routeProps","render","restricted","ErrorMassage","onclic","HomeView","lazy","Phonebook","LoginView","RegisterView","NotFoundViews","App","onGetCurretnUser","Container","Boolean","fallback","Loader","path","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contactReducer","persistReducer","userAuthReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById","module","exports","fetchContactsSuccess","addContactsSuccess","deleteContactsSuccess","filter","id","fetchContactsRequest","addContactsRequest","deleteContactsRequest","number","children","s","container","Load","secondaryColor","height","width","loader","fetchContacts","then","catch","addContact","contact","deleteContact","contactId","delete","getContacts","getFilter","getNumber","getLoading","getvisibleContacts","createSelector","toLowerCase","includes","sort","b"],"mappings":"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","file":"static/js/main.2a226caa.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nconst addValue = (name, value) => ({\r\n  type: `auth/add${name}`,\r\n  payload: value,\r\n});\r\nconst resetValue = createAction('values/reset');\r\nconst resetError = createAction('error/reset');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n  addValue,\r\n  resetValue,\r\n  resetError,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport userAuthActions from './userAuth-actions';\r\nimport {\r\n  fetchContactsError,\r\n  addContactsError,\r\n  deleteContactsError,\r\n} from '../contacts/contact-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [userAuthActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [userAuthActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [userAuthActions.logoutSuccess]: () => initialUserState,\r\n  [userAuthActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [userAuthActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [userAuthActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [userAuthActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [userAuthActions.registerError]: setError,\r\n  [userAuthActions.loginError]: setError,\r\n  [userAuthActions.logoutError]: setError,\r\n  [userAuthActions.getCurrentUserError]: setError,\r\n  [fetchContactsError]: setError,\r\n  [addContactsError]: setError,\r\n  [deleteContactsError]: setError,\r\n  [userAuthActions.resetError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLogin = createReducer(null, {\r\n  [userAuthActions.registerSuccess]: () => true,\r\n  [userAuthActions.loginSuccess]: () => true,\r\n  [userAuthActions.getCurrentUserRequest]: () => true,\r\n  [userAuthActions.getCurrentUserSuccess]: () => true,\r\n  [userAuthActions.registerError]: () => false,\r\n  [userAuthActions.loginError]: () => false,\r\n  [userAuthActions.getCurrentUserError]: () => false,\r\n  [userAuthActions.logoutSuccess]: () => false,\r\n});\r\nconst name = createReducer('', {\r\n  'auth/addname': (_, { payload }) => payload,\r\n  [userAuthActions.resetValue]: (_, { payload }) => payload,\r\n});\r\n\r\nconst email = createReducer('', {\r\n  'auth/addemail': (_, { payload }) => payload,\r\n  [userAuthActions.resetValue]: (_, { payload }) => payload,\r\n});\r\n\r\nconst password = createReducer('', {\r\n  'auth/addpassword': (_, { payload }) => payload,\r\n  [userAuthActions.resetValue]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n  isLogin,\r\n  name,\r\n  email,\r\n  password,\r\n});\r\n","import axios from 'axios';\r\nimport authActions from './userAuth-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    userAuth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n","const getIsAuthenticated = state => state.userAuth.isLogin;\r\n\r\nconst getUsername = state => state.userAuth.user.name;\r\nconst getName = state => state.userAuth.name;\r\nconst getEmail = state => state.userAuth.email;\r\nconst getPassword = state => state.userAuth.password;\r\nconst getError = state => state.userAuth.error;\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUsername,\r\n  getName,\r\n  getEmail,\r\n  getPassword,\r\n  getError,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport styles from './Navigation.module.css';\r\nimport routes from '../../routes';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { userAuthSelectors } from '../../redux/user';\r\n\r\nclass Navigation extends Component {\r\n  render() {\r\n    return (\r\n      <nav>\r\n        <div className={styles.home_link}>\r\n          <NavLink\r\n            exact\r\n            to={routes.home}\r\n            className={styles.link}\r\n            activeClassName={styles.activeLink}\r\n          >\r\n            <Icon style={{ color: grey[50], fontSize: 25 }}>home</Icon>\r\n            <span className={styles.prompt}>Home</span>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            exact\r\n            to={routes.contacts}\r\n            className={styles.link}\r\n            activeClassName={styles.activeLink}\r\n          >\r\n            <Icon style={{ color: grey[50], fontSize: 25 }}>contacts</Icon>\r\n            <span className={styles.prompt}>\r\n              {this.props.isAuthenticated ? 'Contacts' : 'Blocked'}\r\n            </span>\r\n          </NavLink>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: userAuthSelectors.getIsAuthenticated(state),\r\n});\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport styles from './userAuth.module.css';\r\nimport routes from '../../routes';\r\n\r\nconst UserAuth = () => (\r\n  <div>\r\n    <NavLink\r\n      to={routes.register}\r\n      className={styles.link}\r\n      activeClassName={styles.activeLink}\r\n    >\r\n      <Icon style={{ color: grey[50], fontSize: 25 }}>person_add</Icon>\r\n      <span className={styles.prompt}>Register</span>\r\n    </NavLink>\r\n    <NavLink\r\n      to={routes.login}\r\n      className={styles.link}\r\n      activeClassName={styles.activeLink}\r\n    >\r\n      <Icon style={{ color: grey[50], fontSize: 25 }}>exit_to_app</Icon>\r\n      <span className={styles.prompt}>Login</span>\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default UserAuth;\r\n","import React, { Component } from 'react';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport styles from './userMenu.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { userAuthOperations, userAuthSelectors } from '../../redux/user';\r\n\r\nclass UserMenu extends Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.user_menu}>\r\n        <span className={styles.username}>Welcome, {this.props.name}</span>\r\n        <button\r\n          type=\"button\"\r\n          className={styles.btn_logout}\r\n          onClick={this.props.onLogout}\r\n        >\r\n          <Icon style={{ color: grey[50], fontSize: 25 }}>logout</Icon>\r\n          <span className={styles.prompt}>Logout</span>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  name: userAuthSelectors.getUsername(state),\r\n});\r\nconst mapDispatchToProps = {\r\n  onLogout: userAuthOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import Navigation from '../Navigation/Navigation';\r\nimport UserAuth from '../userAuth/userAuth';\r\nimport UserMenu from '../userMenu/userMenu';\r\nimport styles from './AppBar.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { userAuthSelectors } from '../../redux/user';\r\n\r\nconst AppBar = ({ isAuthenticated }) => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <Navigation />\r\n      {isAuthenticated ? <UserMenu /> : <UserAuth />}\r\n    </header>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: userAuthSelectors.getIsAuthenticated(state),\r\n});\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { userAuthSelectors } from '../redux/user';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={props =>\r\n        isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={redirectTo} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: userAuthSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { userAuthSelectors } from '../redux/user';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: userAuthSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport { selectors } from '../redux/contacts';\r\nimport { userAuthActions } from '../redux/user';\r\n\r\nclass ErrorMassage extends Component {\r\n  onclic = () => {\r\n    this.props.resetError('');\r\n  };\r\n  render() {\r\n    const { error } = this.props;\r\n    return (\r\n      <div className=\"msg_error msg_error_active\">\r\n        <h3>Attention!!!</h3>\r\n        <p>{error}</p>\r\n        <button className=\"close_btn\" onClick={this.onclic}>\r\n          <Icon style={{ color: grey[500], fontSize: 20 }}>close</Icon>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  resetError: value => dispatch(userAuthActions.resetError(value)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(ErrorMassage);\r\n","import './App.css';\r\nimport React, { Component, lazy, Suspense } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport AppBar from './components/AppBAr/AppBar';\r\nimport Container from './components/Container/Container';\r\nimport Loader from './components/Loader';\r\nimport routes from './routes';\r\nimport { userAuthOperations, userAuthSelectors } from './redux/user';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ErrorMessage from './components/errorMessage';\r\n\r\nconst HomeView = lazy(() =>\r\n  import('./views/HomeView' /* webpackChunkName: \"home-page\" */),\r\n);\r\nconst Phonebook = lazy(() =>\r\n  import('./views/Phonebook' /* webpackChunkName: \"phonebook-page\" */),\r\n);\r\nconst LoginView = lazy(() =>\r\n  import('./views/LoginView' /* webpackChunkName: \"login-page\" */),\r\n);\r\nconst RegisterView = lazy(() =>\r\n  import('./views/RegisterView' /* webpackChunkName: \"register-page\" */),\r\n);\r\nconst NotFoundViews = lazy(() =>\r\n  import('./views/NotFoundView' /* webpackChunkName: \"notFoud-page\" */),\r\n);\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurretnUser();\r\n  }\r\n  render() {\r\n    const { home, contacts, register, login } = routes;\r\n    const { error } = this.props;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Container>\r\n          <AppBar />\r\n          {Boolean(error) && <ErrorMessage error={error} />}\r\n          <Suspense fallback={<Loader />}>\r\n            <Switch>\r\n              <PublicRoute exact path={home} component={HomeView} />\r\n              <PrivateRoute\r\n                path={contacts}\r\n                redirectTo=\"/login\"\r\n                component={Phonebook}\r\n              />\r\n              <PublicRoute\r\n                path={register}\r\n                restricted\r\n                redirectTo=\"/\"\r\n                component={RegisterView}\r\n              />\r\n              <PublicRoute\r\n                path={login}\r\n                restricted\r\n                redirectTo=\"/contacts\"\r\n                component={LoginView}\r\n              />\r\n              <PublicRoute component={NotFoundViews} />\r\n            </Switch>\r\n          </Suspense>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  error: userAuthSelectors.getError(state),\r\n});\r\nconst mapDispatchToProps = {\r\n  onGetCurretnUser: userAuthOperations.getCurrentUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\nimport contactReducer from './contacts/contact-reducer';\r\nimport { userAuthReducer } from './user';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\nconst authPersistConfig = {\r\n  key: 'userAuth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\nconst store = configureStore({\r\n  reducer: {\r\n    state: contactReducer,\r\n    userAuth: persistReducer(authPersistConfig, userAuthReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","export default {\r\n  home: '/',\r\n  contacts: '/contacts',\r\n  register: '/register',\r\n  login: '/login',\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__NGPKr\",\"prompt\":\"Navigation_prompt__1w2kn\",\"activeLink\":\"Navigation_activeLink__g0Bnr Navigation_link__NGPKr\",\"user_menu\":\"Navigation_user_menu__5n8ny\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"userAuth_link__2xp54\",\"prompt\":\"userAuth_prompt__39hD6\",\"activeLink\":\"userAuth_activeLink__flc98 userAuth_link__2xp54\",\"user_menu\":\"userAuth_user_menu__2O24D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_menu\":\"userMenu_user_menu__dYp9V\",\"username\":\"userMenu_username__bEh4v\",\"prompt\":\"userMenu_prompt__24PKn\",\"btn_logout\":\"userMenu_btn_logout__IAXYX\"};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  addValue,\r\n  resetValue,\r\n} from './contact-actions';\r\n\r\nconst initialState = [];\r\nconst contacts = createReducer(initialState, {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactsSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactsSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactsRequest]: () => true,\r\n  [addContactsSuccess]: () => false,\r\n  [addContactsError]: () => false,\r\n  [deleteContactsRequest]: () => true,\r\n  [deleteContactsSuccess]: () => false,\r\n  [deleteContactsError]: () => false,\r\n});\r\n// const setError = (_, { payload }) => payload.message;\r\n// const error = createReducer(null, {\r\n//   [fetchContactsError]: setError,\r\n//   [addContactsError]: setError,\r\n//   [deleteContactsError]: setError,\r\n// });\r\nconst name = createReducer('', {\r\n  'values/addname': (_, { payload }) => payload,\r\n  [resetValue]: (_, { payload }) => payload,\r\n});\r\n\r\nconst number = createReducer('', {\r\n  'values/addnumber': (_, { payload }) => payload,\r\n  [resetValue]: (_, { payload }) => payload,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  'values/addfilter': (_, { payload }) => payload,\r\n  [resetValue]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  loading,\r\n\r\n  name,\r\n  number,\r\n  filter,\r\n});\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\r\nexport const addContactsSuccess = createAction('contacts/addContactsSuccess');\r\nexport const addContactsError = createAction('contacts/addContactsError');\r\n\r\nexport const deleteContactsRequest = createAction(\r\n  'contacts/deleteContactsRequest',\r\n);\r\nexport const deleteContactsSuccess = createAction(\r\n  'contacts/deleteContactsSuccess',\r\n);\r\nexport const deleteContactsError = createAction('contacts/deleteContactsError');\r\n\r\nexport const addValue = (name, value) => ({\r\n  type: `values/add${name}`,\r\n  payload: value,\r\n});\r\nexport const resetValue = createAction('values/reset');\r\n","import s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport s from './Loader.module.css';\r\n\r\nexport default class Load extends Component {\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"BallTriangle\"\r\n        color=\"white\"\r\n        secondaryColor=\"grey\"\r\n        height={20}\r\n        width={20}\r\n        className={s.loader}\r\n      />\r\n    );\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__3GceQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__MmhGE\",\"loader\":\"Container_loader__1rQKh\",\"Container__top\":\"Container_Container__top__3ssMo\",\"Container__bottom\":\"Container_Container__bottom__3FQoP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2-VzN\"};","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n} from './contact-actions';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error.message)));\r\n};\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  const contact = { name, number };\r\n  dispatch(addContactsRequest());\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactsSuccess(data)))\r\n    .catch(error => dispatch(addContactsError(error.message)));\r\n};\r\n\r\nconst deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactsRequest());\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(({ data }) => dispatch(deleteContactsSuccess(contactId)))\r\n    .catch(error => dispatch(deleteContactsError(error.message)));\r\n};\r\n\r\nexport default {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.state.contacts;\r\nconst getError = state => state.state.error;\r\nconst getName = state => state.state.name;\r\nconst getNumber = state => state.state.number;\r\nconst getFilter = state => state.state.filter;\r\nconst getLoading = state => state.state.loading;\r\n\r\nconst getvisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts\r\n      .filter(contact =>\r\n        contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n      )\r\n      .sort((a, b) => (a.name !== b.name ? (a.name < b.name ? -1 : 1) : 0));\r\n  },\r\n);\r\n\r\nexport default {\r\n  getContacts,\r\n  getError,\r\n  getName,\r\n  getNumber,\r\n  getFilter,\r\n  getLoading,\r\n  getvisibleContacts,\r\n};\r\n"],"sourceRoot":""}