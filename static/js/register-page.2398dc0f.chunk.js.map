{"version":3,"sources":["components/RegisterForm/RegisterForm.module.css","components/RegisterForm/RegisterForm.js","views/RegisterView.js"],"names":["module","exports","RegisterForm","handleSubmit","e","preventDefault","props","onRegister","values","resetValue","this","handleChange","onSubmit","className","s","register__form","autoComplete","register__field","Icon","style","color","grey","fontSize","type","name","value","placeholder","onChange","label_name","email","label_mail","password","label_passw","register__btn","Component","connect","state","userAuthSelectors","getName","getEmail","getPassword","dispatch","val","userAuthOperations","register","userAuthActions","addValue","target","RegisterView"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,eAAiB,qCAAqC,gBAAkB,sCAAsC,WAAa,iCAAiC,WAAa,iCAAiC,YAAc,kCAAkC,cAAgB,sC,sJCUtRC,E,4MACJC,aAAe,SAAAC,GACbA,EAAEC,iBACF,EAAKC,MAAMC,WAAW,EAAKD,MAAME,QACjC,EAAKF,MAAMG,WAAW,K,4CAGxB,WAAU,IAAD,EAC0BC,KAAKJ,MAA9BE,EADD,EACCA,OAAQG,EADT,EACSA,aAEhB,OACE,qCACE,yCACA,sBACEC,SAAUF,KAAKP,aACfU,UAAWC,IAAEC,eACbC,aAAa,MAHf,SAKE,gCACE,sBAAKH,UAAWC,IAAEG,gBAAlB,UACE,cAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAOC,IAAK,KAAMC,SAAU,IAA3C,2BAGA,uBACEC,KAAK,OACLC,KAAK,OACLC,MAAOjB,EAAOgB,KACdE,YAAY,OACZC,SAAUhB,IAEZ,uBAAOE,UAAWC,IAAEc,WAApB,sBAEF,sBAAKf,UAAWC,IAAEG,gBAAlB,UACE,cAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAOC,IAAK,KAAMC,SAAU,IAA3C,6BAGA,uBACEC,KAAK,QACLC,KAAK,QACLC,MAAOjB,EAAOqB,MACdH,YAAY,SACZC,SAAUhB,IAEZ,uBAAOE,UAAWC,IAAEgB,WAApB,wBACK,IACP,sBAAKjB,UAAWC,IAAEG,gBAAlB,UACE,cAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAOC,IAAK,KAAMC,SAAU,IAA3C,sBACA,uBACEC,KAAK,WACLC,KAAK,WACLC,MAAOjB,EAAOuB,SACdL,YAAY,WACZC,SAAUhB,IAEZ,uBAAOE,UAAWC,IAAEkB,YAApB,0BAEF,wBAAQnB,UAAWC,IAAEmB,cAAeV,KAAK,SAAzC,SACE,cAACL,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAOC,IAAK,IAAKC,SAAU,IAA1C,sC,GAzDaY,aAgFZC,eAdS,SAAAC,GAAK,MAAK,CAChC5B,OAAQ,CACNgB,KAAMa,IAAkBC,QAAQF,GAChCP,MAAOQ,IAAkBE,SAASH,GAClCL,SAAUM,IAAkBG,YAAYJ,QAGjB,SAAAK,GAAQ,MAAK,CACtClC,WAAY,SAAAmC,GAAG,OAAID,EAASE,IAAmBC,SAASF,KACxD/B,aAAc,SAAAP,GAAC,OACbqC,EAASI,IAAgBC,SAAS1C,EAAE2C,OAAOvB,KAAMpB,EAAE2C,OAAOtB,SAC5DhB,WAAY,SAAAgB,GAAK,OAAIgB,EAASI,IAAgBpC,WAAWgB,QAG5CU,CAA6CjC,GCxFtD8C,E,4JACJ,WACE,OAAO,cAAC,EAAD,Q,GAFgBd,aAMZc","file":"static/js/register-page.2398dc0f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"register__form\":\"RegisterForm_register__form__oEFnu\",\"register__field\":\"RegisterForm_register__field__34mm_\",\"label_name\":\"RegisterForm_label_name__2aWtv\",\"label_mail\":\"RegisterForm_label_mail__1pqTw\",\"label_passw\":\"RegisterForm_label_passw__1GiHk\",\"register__btn\":\"RegisterForm_register__btn__xCiii\"};","import React, { Component } from 'react';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport s from './RegisterForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  userAuthOperations,\r\n  userAuthSelectors,\r\n  userAuthActions,\r\n} from '../../redux/user';\r\n\r\nclass RegisterForm extends Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onRegister(this.props.values);\r\n    this.props.resetValue('');\r\n  };\r\n\r\n  render() {\r\n    const { values, handleChange } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <h1>Registr</h1>\r\n        <form\r\n          onSubmit={this.handleSubmit}\r\n          className={s.register__form}\r\n          autoComplete=\"off\"\r\n        >\r\n          <div>\r\n            <div className={s.register__field}>\r\n              <Icon style={{ color: grey[500], fontSize: 20 }}>\r\n                perm_identity\r\n              </Icon>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={values.name}\r\n                placeholder=\"Name\"\r\n                onChange={handleChange}\r\n              />\r\n              <label className={s.label_name}>Name </label>\r\n            </div>\r\n            <div className={s.register__field}>\r\n              <Icon style={{ color: grey[500], fontSize: 20 }}>\r\n                alternate_email\r\n              </Icon>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={values.email}\r\n                placeholder=\"e-mail\"\r\n                onChange={handleChange}\r\n              />\r\n              <label className={s.label_mail}>e-mail </label>\r\n            </div>{' '}\r\n            <div className={s.register__field}>\r\n              <Icon style={{ color: grey[500], fontSize: 20 }}>pan_tool</Icon>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={values.password}\r\n                placeholder=\"Password\"\r\n                onChange={handleChange}\r\n              />\r\n              <label className={s.label_passw}>Password </label>\r\n            </div>\r\n            <button className={s.register__btn} type=\"submit\">\r\n              <Icon style={{ color: grey[50], fontSize: 30 }}>how_to_reg</Icon>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  values: {\r\n    name: userAuthSelectors.getName(state),\r\n    email: userAuthSelectors.getEmail(state),\r\n    password: userAuthSelectors.getPassword(state),\r\n  },\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onRegister: val => dispatch(userAuthOperations.register(val)),\r\n  handleChange: e =>\r\n    dispatch(userAuthActions.addValue(e.target.name, e.target.value)),\r\n  resetValue: value => dispatch(userAuthActions.resetValue(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm);\r\n","import React, { Component } from 'react';\r\nimport RegisterForm from '../components/RegisterForm';\r\n\r\nclass RegisterView extends Component {\r\n  render() {\r\n    return <RegisterForm />;\r\n  }\r\n}\r\n\r\nexport default RegisterView;\r\n"],"sourceRoot":""}