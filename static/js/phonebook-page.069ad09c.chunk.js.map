{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","redux/contacts/contact-operations.js","redux/contacts/contact-selector.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","views/Phonebook.js"],"names":["module","exports","dispatch","fetchContactsRequest","axios","get","then","data","fetchContactsSuccess","catch","error","fetchContactsError","message","name","number","contact","addContactsRequest","post","addContactsSuccess","addContactsError","contactId","deleteContactsRequest","delete","deleteContactsSuccess","deleteContactsError","getContacts","state","contacts","getFilter","filter","getError","getName","getNumber","getLoading","loading","getvisibleContacts","createSelector","toLowerCase","includes","sort","a","b","nameInputID","uuidv4","numberInputID","ContactForm","handleSubmit","e","preventDefault","props","length","addContact","alert","resetValue","this","handleChange","className","s","phonebook","title","onSubmit","phonebook__form","phonebook__field","Icon","style","color","grey","fontSize","type","value","id","onChange","phonebook__name","pattern","placeholder","htmlFor","phonebook__tel","phonebook__btn","Component","defaultProps","connect","selectors","userAuthSelectors","operations","addValue","target","userAuthActions","ContactList","children","propType","PropTypes","string","filterInputID","Filter","phonebook__filter","onClick","ContactItem","deleteContact","Accordion","defaultActiveKey","map","Card","backgroundColor","borderRadius","Toggle","as","Header","eventKey","borderBottom","paddingLeft","Avatar","width","height","fontWeight","fontStyle","substr","deleteBtn","Collapse","Body","padding","marginLeft","Phonebook","fetchContacts","isLoading","Loader"],"mappings":"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","file":"static/js/phonebook-page.069ad09c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"ContactForm_phonebook__Koi5b\",\"phonebook__form\":\"ContactForm_phonebook__form__2gu6a\",\"phonebook__field\":\"ContactForm_phonebook__field__2XcQp\",\"phonebook__name\":\"ContactForm_phonebook__name__3jGc1\",\"phonebook__tel\":\"ContactForm_phonebook__tel__3MB-W\",\"phonebook__btn\":\"ContactForm_phonebook__btn__3Zlxu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__3DOkV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook__filter\":\"Filter_phonebook__filter__2XogG\",\"phonebook__btn\":\"Filter_phonebook__btn__1UE3M\",\"phonebook__icon\":\"Filter_phonebook__icon__1THez\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"ContactItem_contacts__list__3DoQ_\",\"contacts__item\":\"ContactItem_contacts__item__1cTU7\",\"deleteBtn\":\"ContactItem_deleteBtn__HmUyw\",\"loader\":\"ContactItem_loader__1HJE6\"};","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n} from './contact-actions';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error.message)));\r\n};\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  const contact = { name, number };\r\n  dispatch(addContactsRequest());\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactsSuccess(data)))\r\n    .catch(error => dispatch(addContactsError(error.message)));\r\n};\r\n\r\nconst deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactsRequest());\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(({ data }) => dispatch(deleteContactsSuccess(contactId)))\r\n    .catch(error => dispatch(deleteContactsError(error.message)));\r\n};\r\n\r\nexport default {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.state.contacts;\r\nconst getError = state => state.state.error;\r\nconst getName = state => state.state.name;\r\nconst getNumber = state => state.state.number;\r\nconst getFilter = state => state.state.filter;\r\nconst getLoading = state => state.state.loading;\r\n\r\nconst getvisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts\r\n      .filter(contact =>\r\n        contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n      )\r\n      .sort((a, b) => (a.name !== b.name ? (a.name < b.name ? -1 : 1) : 0));\r\n  },\r\n);\r\n\r\nexport default {\r\n  getContacts,\r\n  getError,\r\n  getName,\r\n  getNumber,\r\n  getFilter,\r\n  getLoading,\r\n  getvisibleContacts,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport s from './ContactForm.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport { selectors, operations, addValue } from '../../redux/contacts';\r\nimport { userAuthSelectors, userAuthActions } from '../../redux/user';\r\n\r\nconst nameInputID = uuidv4();\r\nconst numberInputID = uuidv4();\r\nclass ContactForm extends Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { contacts, name, number } = this.props;\r\n\r\n    const auditContact = contacts.filter(contact => contact.name === name);\r\n\r\n    auditContact.length === 0\r\n      ? this.props.addContact(name, number)\r\n      : alert('This contact already exist');\r\n\r\n    this.props.resetValue('');\r\n  };\r\n\r\n  render() {\r\n    const { name, number, handleChange } = this.props;\r\n\r\n    return (\r\n      <div className={s.phonebook}>\r\n        <h1>{this.props.title}</h1>\r\n\r\n        <form onSubmit={this.handleSubmit} className={s.phonebook__form}>\r\n          <div>\r\n            <div className={s.phonebook__field}>\r\n              <Icon style={{ color: grey[500], fontSize: 20 }}>\r\n                perm_identity\r\n              </Icon>\r\n\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                id={nameInputID}\r\n                onChange={handleChange}\r\n              />\r\n              <label className={s.phonebook__name}>Name</label>\r\n            </div>\r\n            <div className={s.phonebook__field}>\r\n              <Icon style={{ color: grey[500], fontSize: 20 }}>phone</Icon>\r\n              <input\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\r\n                placeholder={'111-22-33'}\r\n                value={number}\r\n                id={numberInputID}\r\n                onChange={handleChange}\r\n              />\r\n              <label htmlFor={numberInputID} className={s.phonebook__tel}>\r\n                Phone\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <button type=\"submit\" className={s.phonebook__btn}>\r\n            <Icon style={{ color: grey[50], fontSize: 40 }}>add_circle</Icon>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nContactForm.defaultProps = { title: 'Phonebook' };\r\nContactForm.propTypes = {\r\n  title: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  handleChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: selectors.getContacts(state),\r\n  name: selectors.getName(state),\r\n  number: selectors.getNumber(state),\r\n  error: userAuthSelectors.getError(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addContact: (name, number) => dispatch(operations.addContact(name, number)),\r\n  handleChange: e => dispatch(addValue(e.target.name, e.target.value)),\r\n  resetValue: value => dispatch(userAuthActions.resetValue(value)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst ContactList = ({ title, children }) => {\r\n  return (\r\n    <div className={s.contacts}>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\nContactList.propType = { title: PropTypes.string };\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport s from './Filter.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport { selectors, addValue, resetValue } from '../../redux/contacts';\r\n\r\nconst filterInputID = uuidv4();\r\nclass Filter extends Component {\r\n  render() {\r\n    const { filter, handleChange, resetValue } = this.props;\r\n\r\n    return (\r\n      <label htmlFor={filterInputID} className={s.phonebook__filter}>\r\n        <button className={s.phonebook__btn} onClick={() => resetValue('')}>\r\n          <Icon style={{ color: grey[800], fontSize: 20 }}>search</Icon>\r\n        </button>\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          id={filterInputID}\r\n          onChange={handleChange}\r\n          placeholder=\" Find contacts by name\"\r\n        />\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nFilter.defaultProps = { filter: '' };\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  handleChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: selectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleChange: e => dispatch(addValue(e.target.name, e.target.value)),\r\n  resetValue: value => dispatch(resetValue(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport s from './ContactItem.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { operations, selectors } from '../../redux/contacts';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nclass ContactItem extends Component {\r\n  render() {\r\n    const { contacts, deleteContact } = this.props;\r\n    return (\r\n      <Accordion defaultActiveKey=\"0\">\r\n        {contacts.map(({ id, name, number }) => {\r\n          return (\r\n            <Card\r\n              key={id}\r\n              style={{\r\n                backgroundColor: 'rgb(39, 36, 36)',\r\n                borderRadius: '10px',\r\n              }}\r\n            >\r\n              <Accordion.Toggle\r\n                as={Card.Header}\r\n                eventKey={id}\r\n                style={{\r\n                  borderBottom: '1px solid grey',\r\n                  paddingLeft: '5px',\r\n                }}\r\n              >\r\n                <Avatar\r\n                  style={{\r\n                    width: '25px',\r\n                    height: '25px',\r\n                    fontSize: '13px',\r\n                    color: 'black',\r\n                    fontWeight: 'bolder',\r\n                    fontStyle: 'italic',\r\n                  }}\r\n                >\r\n                  {name.substr(0, 2)}\r\n                </Avatar>\r\n                <p>{name}</p>\r\n              </Accordion.Toggle>\r\n              <button\r\n                type=\"button\"\r\n                className={s.deleteBtn}\r\n                onClick={() => deleteContact(id)}\r\n              >\r\n                <Icon style={{ color: grey[50], fontSize: 26 }}>\r\n                  delete_forever\r\n                </Icon>\r\n              </button>\r\n              <Accordion.Collapse eventKey={id}>\r\n                <Card.Body style={{ padding: '3px', marginLeft: '60px' }}>\r\n                  {number}\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          );\r\n        })}\r\n      </Accordion>\r\n    );\r\n  }\r\n}\r\nContactItem.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: selectors.getvisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: id => dispatch(operations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContactForm from '../components/ContactForm';\r\nimport ContactList from '../components/ContactList';\r\nimport Filter from '../components/Filter';\r\nimport ContactItem from '../components/ContactItem';\r\nimport Loader from '../components/Loader';\r\nimport { operations, selectors } from '../redux/contacts';\r\n\r\nclass Phonebook extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ContactForm title=\"Phonebook\" />\r\n\r\n        <ContactList title=\"Contacts\">\r\n          <div className=\"filter_container\">\r\n            <Filter />\r\n            {this.props.isLoading && <Loader />}\r\n          </div>\r\n          <ContactItem />\r\n        </ContactList>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoading: selectors.getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(operations.fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n"],"sourceRoot":""}