{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","redux/contacts/contact-operations.js","redux/contacts/contact-selector.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","views/Phonebook.js"],"names":["module","exports","dispatch","fetchContactsRequest","axios","get","then","data","fetchContactsSuccess","catch","error","fetchContactsError","message","name","number","contact","addContactsRequest","post","addContactsSuccess","addContactsError","contactId","deleteContactsRequest","delete","deleteContactsSuccess","deleteContactsError","getContacts","state","contacts","getFilter","filter","getError","getName","getNumber","getLoading","loading","getvisibleContacts","createSelector","toLowerCase","includes","sort","a","b","nameInputID","uuidv4","numberInputID","ContactForm","title","useDispatch","useState","setName","setNumber","useSelector","selectors","handleChange","e","target","value","className","s","phonebook","onSubmit","preventDefault","length","operations","userAuthActions","resetError","phonebook__form","phonebook__field","Icon","style","color","grey","fontSize","type","id","onChange","phonebook__name","pattern","placeholder","htmlFor","phonebook__tel","phonebook__btn","ContactList","children","propType","PropTypes","string","filterInputID","Filter","phonebook__filter","onClick","addFilter","ContactItem","Accordion","defaultActiveKey","map","Card","backgroundColor","borderRadius","Toggle","as","Header","eventKey","borderBottom","paddingLeft","Avatar","width","height","fontWeight","fontStyle","substr","deleteBtn","deleteContact","Collapse","Body","padding","marginLeft","Phonebook","isLoading","useEffect","Loader"],"mappings":"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","file":"static/js/phonebook-page.9bbb2fab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"ContactForm_phonebook__gyiey\",\"phonebook__form\":\"ContactForm_phonebook__form__2bd1Z\",\"phonebook__field\":\"ContactForm_phonebook__field__1aFQM\",\"phonebook__name\":\"ContactForm_phonebook__name__sIBvV\",\"phonebook__tel\":\"ContactForm_phonebook__tel__2FTmu\",\"phonebook__btn\":\"ContactForm_phonebook__btn__110sn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__306le\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook__filter\":\"Filter_phonebook__filter__28__c\",\"phonebook__btn\":\"Filter_phonebook__btn__23LDQ\",\"phonebook__icon\":\"Filter_phonebook__icon__3XEDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"ContactItem_contacts__list__1VlnK\",\"contacts__item\":\"ContactItem_contacts__item__1xmHs\",\"deleteBtn\":\"ContactItem_deleteBtn__2absg\",\"loader\":\"ContactItem_loader__1pz1E\"};","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n} from './contact-actions';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error.message)));\r\n};\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  const contact = { name, number };\r\n  dispatch(addContactsRequest());\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactsSuccess(data)))\r\n    .catch(error => dispatch(addContactsError(error.message)));\r\n};\r\n\r\nconst deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactsRequest());\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(({ data }) => dispatch(deleteContactsSuccess(contactId)))\r\n    .catch(error => dispatch(deleteContactsError(error.message)));\r\n};\r\n\r\nexport default {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.state.contacts;\r\nconst getError = state => state.state.error;\r\nconst getName = state => state.state.name;\r\nconst getNumber = state => state.state.number;\r\nconst getFilter = state => state.state.filter;\r\nconst getLoading = state => state.state.loading;\r\n\r\nconst getvisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts\r\n      .filter(contact =>\r\n        contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n      )\r\n      .sort((a, b) => (a.name !== b.name ? (a.name < b.name ? -1 : 1) : 0));\r\n  },\r\n);\r\n\r\nexport default {\r\n  getContacts,\r\n  getError,\r\n  getName,\r\n  getNumber,\r\n  getFilter,\r\n  getLoading,\r\n  getvisibleContacts,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport s from './ContactForm.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { selectors, operations } from '../../redux/contacts';\r\nimport { userAuthActions } from '../../redux/user';\r\n\r\nconst nameInputID = uuidv4();\r\nconst numberInputID = uuidv4();\r\n\r\nexport default function ContactForm({ title }) {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(selectors.getContacts);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const auditContact = contacts.filter(contact => contact.name === name);\r\n    auditContact.length === 0\r\n      ? dispatch(operations.addContact(name, number))\r\n      : dispatch(userAuthActions.resetError('This contact already exist'));\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <div className={s.phonebook}>\r\n      <h1>{title}</h1>\r\n\r\n      <form onSubmit={handleSubmit} className={s.phonebook__form}>\r\n        <div>\r\n          <div className={s.phonebook__field}>\r\n            <Icon style={{ color: grey[500], fontSize: 20 }}>\r\n              perm_identity\r\n            </Icon>\r\n\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              id={nameInputID}\r\n              onChange={handleChange}\r\n            />\r\n            <label className={s.phonebook__name}>Name</label>\r\n          </div>\r\n          <div className={s.phonebook__field}>\r\n            <Icon style={{ color: grey[500], fontSize: 20 }}>phone</Icon>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\r\n              placeholder={'111-22-33'}\r\n              value={number}\r\n              id={numberInputID}\r\n              onChange={handleChange}\r\n            />\r\n            <label htmlFor={numberInputID} className={s.phonebook__tel}>\r\n              Phone\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\" className={s.phonebook__btn}>\r\n          <Icon style={{ color: grey[50], fontSize: 40 }}>add_circle</Icon>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst ContactList = ({ title, children }) => {\r\n  return (\r\n    <div className={s.contacts}>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\nContactList.propType = { title: PropTypes.string };\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport s from './Filter.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { selectors, addFilter } from '../../redux/contacts';\r\n\r\nconst filterInputID = uuidv4();\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(selectors.getFilter);\r\n  const handleChange = e => {\r\n    const { value } = e.target;\r\n    dispatch(addFilter(value));\r\n  };\r\n  const resetFilter = () => {\r\n    dispatch(addFilter(''));\r\n  };\r\n\r\n  return (\r\n    <label htmlFor={filterInputID} className={s.phonebook__filter}>\r\n      <button className={s.phonebook__btn} onClick={resetFilter}>\r\n        <Icon style={{ color: grey[800], fontSize: 20 }}>search</Icon>\r\n      </button>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        id={filterInputID}\r\n        onChange={handleChange}\r\n        placeholder=\" Find contacts by name\"\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport s from './ContactItem.module.css';\r\nimport { operations, selectors } from '../../redux/contacts';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nexport default function ContactItem() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(selectors.getvisibleContacts);\r\n  const deleteContact = id => {\r\n    dispatch(operations.deleteContact(id));\r\n  };\r\n\r\n  return (\r\n    <Accordion defaultActiveKey=\"0\">\r\n      {contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <Card\r\n            key={id}\r\n            style={{\r\n              backgroundColor: 'rgb(39, 36, 36)',\r\n              borderRadius: '10px',\r\n            }}\r\n          >\r\n            <Accordion.Toggle\r\n              as={Card.Header}\r\n              eventKey={id}\r\n              style={{\r\n                borderBottom: '1px solid grey',\r\n                paddingLeft: '5px',\r\n              }}\r\n            >\r\n              <Avatar\r\n                style={{\r\n                  width: '25px',\r\n                  height: '25px',\r\n                  fontSize: '13px',\r\n                  color: 'black',\r\n                  fontWeight: 'bolder',\r\n                  fontStyle: 'italic',\r\n                }}\r\n              >\r\n                {name.substr(0, 2)}\r\n              </Avatar>\r\n              <p>{name}</p>\r\n            </Accordion.Toggle>\r\n            <button\r\n              type=\"button\"\r\n              className={s.deleteBtn}\r\n              onClick={() => deleteContact(id)}\r\n            >\r\n              <Icon style={{ color: grey[50], fontSize: 26 }}>\r\n                delete_forever\r\n              </Icon>\r\n            </button>\r\n            <Accordion.Collapse eventKey={id}>\r\n              <Card.Body style={{ padding: '3px', marginLeft: '60px' }}>\r\n                {number}\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n        );\r\n      })}\r\n    </Accordion>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport ContactForm from '../components/ContactForm';\r\nimport ContactList from '../components/ContactList';\r\nimport Filter from '../components/Filter';\r\nimport ContactItem from '../components/ContactItem';\r\nimport Loader from '../components/Loader';\r\nimport { operations, selectors } from '../redux/contacts';\r\n\r\nexport default function Phonebook() {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(selectors.getLoading);\r\n  useEffect(() => {\r\n    dispatch(operations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <ContactForm title=\"Phonebook\" />\r\n\r\n      <ContactList title=\"Contacts\">\r\n        <div className=\"filter_container\">\r\n          <Filter />\r\n          {isLoading && <Loader />}\r\n        </div>\r\n        <ContactItem />\r\n      </ContactList>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}